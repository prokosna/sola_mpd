syntax = "proto3";

import "file_explore.proto";
import "filter.proto";
import "playlist.proto";
import "song.proto";
import "mpd/mpd_output.proto";
import "mpd/mpd_player.proto";
import "mpd/mpd_profile.proto";
import "mpd/mpd_stats.proto";

message MpdCommand {
  message Connection {
    message PingRequest {}
    message PingResponse {
      string version = 1;
    }
  }

  message Control {
    message NextRequest {}
    message NextResponse {}
    message PauseRequest {
      bool pause = 1;
    }
    message PauseResponse {}
    message PlayRequest {
      oneof target {
        string pos = 1;
        string id = 2;
      }
    }
    message PlayResponse {}
    message PreviousRequest {}
    message PreviousResponse {}
    message SeekRequest {
      float time = 1;
      oneof target {
        string pos = 2;
        string id = 3;
        bool current = 4;
      }
    }
    message SeekResponse {}
    message StopRequest {}
    message StopResponse {}
  }

  message Playback {
    message ConsumeRequest {
      bool enable = 1;
    }
    message ConsumeResponse {}
    message RandomRequest {
      bool enable = 1;
    }
    message RandomResponse {}
    message RepeatRequest {
      bool enable = 1;
    }
    message RepeatResponse {}
    message SetVolRequest {
      int32 vol = 1;
    }
    message SetVolResponse {}
    message GetVolRequest {}
    message GetVolResponse {
      MpdPlayerVolume vol = 1;
    }
    message SingleRequest {
      bool enable = 1;
    }
    message SingleResponse {}
  }

  message Status {
    message CurrentSongRequest {}
    message CurrentSongResponse {
      Song song = 1;
    }
    message StatusRequest {}
    message StatusResponse {
      MpdPlayerStatus status = 1;
    }
    message StatsRequest {}
    message StatsResponse {
      MpdStats stats = 1;
    }
  }

  message Queue {
    message AddRequest {
      string uri = 1;
    }
    message AddResponse {}
    message ClearRequest {}
    message ClearResponse {}
    message DeleteRequest {
      oneof target {
        string pos = 1;
        string id = 2;
      }
    }
    message DeleteResponse {}
    message MoveRequest {
      oneof from {
        string from_pos = 1;
        string from_id = 2;
      }
      string to = 3;
    }
    message MoveResponse {}
    message PlaylistInfoRequest {}
    message PlaylistInfoResponse {
      repeated Song songs = 1;
    }
    message ShuffleRequest {}
    message ShuffleResponse {}
  }

  message StoredPlaylist {
    message ListPlaylistInfoRequest {
      string name = 1;
    }
    message ListPlaylistInfoResponse {
      repeated Song songs = 1;
    }
    message ListPlaylistsRequest {}
    message ListPlaylistsResponse {
      repeated Playlist playlists = 1;
    }
    message PlaylistAddRequest {
      string name = 1;
      string uri = 2;
    }
    message PlaylistAddResponse {}
    message PlaylistClearRequest {
      string name = 1;
    }
    message PlaylistClearResponse {}
    message PlaylistDeleteRequest {
      string name = 1;
      string pos = 2;
    }
    message PlaylistDeleteResponse {}
    message PlaylistMoveRequest {
      string name = 1;
      string from = 2;
      string to = 3;
    }
    message PlaylistMoveResponse {}
    message RenameRequest {
      string name = 1;
      string new_name = 2;
    }
    message RenameResponse {}
    message RemoveRequest {
      string name = 1;
    }
    message RemoveResponse {}
    message SaveRequest {
      string name = 1;
    }
    message SaveResponse {}
  }

  message Database {
    message ListRequest {
      Song.MetadataTag tag = 1;
      repeated FilterCondition conditions = 2;
    }
    message ListResponse {
      repeated string values = 1;
    }
    message SearchRequest {
      repeated FilterCondition conditions = 1;
    }
    message SearchResponse {
      repeated Song songs = 1;
    }
    message UpdateRequest {}
    message UpdateResponse {}
  }

  message Audio {
    message OutputsRequest {}
    message OutputsResponse {
      repeated MpdOutputDevice devices = 1;
    }
  }

  message Utility {
    message ListAllSongsRequest {}
    message ListAllSongsResponse {
      repeated Song songs = 1;
    }
    message ListAllFoldersRequest {}
    message ListAllFoldersResponse {
      repeated Folder folders = 1;
    }
    message ListSongsInFolderRequest {
      Folder folder = 1;
    }
    message ListSongsInFolderResponse {
      repeated Song songs = 1;
    }
  }
}

message MpdRequest {
  MpdProfile profile = 1;
  oneof command {
    MpdCommand.Connection.PingRequest ping = 2;

    MpdCommand.Control.NextRequest next = 3;
    MpdCommand.Control.PauseRequest pause = 4;
    MpdCommand.Control.PlayRequest play = 5;
    MpdCommand.Control.PreviousRequest previous = 6;
    MpdCommand.Control.SeekRequest seek = 7;
    MpdCommand.Control.StopRequest stop = 8;

    MpdCommand.Playback.ConsumeRequest consume = 9;
    MpdCommand.Playback.RandomRequest random = 10;
    MpdCommand.Playback.RepeatRequest repeat = 11;
    MpdCommand.Playback.SetVolRequest setvol = 12;
    MpdCommand.Playback.GetVolRequest getvol = 13;
    MpdCommand.Playback.SingleRequest single = 14;

    MpdCommand.Status.CurrentSongRequest currentsong = 15;
    MpdCommand.Status.StatusRequest status = 16;
    MpdCommand.Status.StatsRequest stats = 17;

    MpdCommand.Queue.AddRequest add = 18;
    MpdCommand.Queue.ClearRequest clear = 19;
    MpdCommand.Queue.DeleteRequest delete = 20;
    MpdCommand.Queue.MoveRequest move = 21;
    MpdCommand.Queue.PlaylistInfoRequest playlistinfo = 22;
    MpdCommand.Queue.ShuffleRequest shuffle = 23;

    MpdCommand.StoredPlaylist.ListPlaylistInfoRequest listplaylistinfo = 24;
    MpdCommand.StoredPlaylist.ListPlaylistsRequest listplaylists = 25;
    MpdCommand.StoredPlaylist.PlaylistAddRequest playlistadd = 26;
    MpdCommand.StoredPlaylist.PlaylistClearRequest playlistclear = 27;
    MpdCommand.StoredPlaylist.PlaylistDeleteRequest playlistdelete = 28;
    MpdCommand.StoredPlaylist.PlaylistMoveRequest playlistmove = 29;
    MpdCommand.StoredPlaylist.RenameRequest rename = 30;
    MpdCommand.StoredPlaylist.RemoveRequest rm = 31;
    MpdCommand.StoredPlaylist.SaveRequest save = 32;

    MpdCommand.Database.ListRequest list = 33;
    MpdCommand.Database.SearchRequest search = 34;
    MpdCommand.Database.UpdateRequest update = 35;

    MpdCommand.Audio.OutputsRequest outputs = 36;

    MpdCommand.Utility.ListAllSongsRequest list_all_songs = 37;
    MpdCommand.Utility.ListAllFoldersRequest list_all_folders = 38;
    MpdCommand.Utility.ListSongsInFolderRequest list_songs_in_folder = 39;
  }
}

message MpdRequestBulk {
  repeated MpdRequest requests = 1;
}

message MpdResponse {
  oneof command {
    MpdCommand.Connection.PingResponse ping = 2;

    MpdCommand.Control.NextResponse next = 3;
    MpdCommand.Control.PauseResponse pause = 4;
    MpdCommand.Control.PlayResponse play = 5;
    MpdCommand.Control.PreviousResponse previous = 6;
    MpdCommand.Control.SeekResponse seek = 7;
    MpdCommand.Control.StopResponse stop = 8;

    MpdCommand.Playback.ConsumeResponse consume = 9;
    MpdCommand.Playback.RandomResponse random = 10;
    MpdCommand.Playback.RepeatResponse repeat = 11;
    MpdCommand.Playback.SetVolResponse setvol = 12;
    MpdCommand.Playback.GetVolResponse getvol = 13;
    MpdCommand.Playback.SingleResponse single = 14;

    MpdCommand.Status.CurrentSongResponse currentsong = 15;
    MpdCommand.Status.StatusResponse status = 16;
    MpdCommand.Status.StatsResponse stats = 17;

    MpdCommand.Queue.AddResponse add = 18;
    MpdCommand.Queue.ClearResponse clear = 19;
    MpdCommand.Queue.DeleteResponse delete = 20;
    MpdCommand.Queue.MoveResponse move = 21;
    MpdCommand.Queue.PlaylistInfoResponse playlistinfo = 22;
    MpdCommand.Queue.ShuffleResponse shuffle = 23;

    MpdCommand.StoredPlaylist.ListPlaylistInfoResponse listplaylistinfo = 24;
    MpdCommand.StoredPlaylist.ListPlaylistsResponse listplaylists = 25;
    MpdCommand.StoredPlaylist.PlaylistAddResponse playlistadd = 26;
    MpdCommand.StoredPlaylist.PlaylistClearResponse playlistclear = 27;
    MpdCommand.StoredPlaylist.PlaylistDeleteResponse playlistdelete = 28;
    MpdCommand.StoredPlaylist.PlaylistMoveResponse playlistmove = 29;
    MpdCommand.StoredPlaylist.RenameResponse rename = 30;
    MpdCommand.StoredPlaylist.RemoveResponse rm = 31;
    MpdCommand.StoredPlaylist.SaveResponse save = 32;

    MpdCommand.Database.ListResponse list = 33;
    MpdCommand.Database.SearchResponse search = 34;
    MpdCommand.Database.UpdateResponse update = 35;

    MpdCommand.Audio.OutputsResponse outputs = 36;

    MpdCommand.Utility.ListAllSongsResponse list_all_songs = 37;
    MpdCommand.Utility.ListAllFoldersResponse list_all_folders = 38;
    MpdCommand.Utility.ListSongsInFolderResponse list_songs_in_folder = 39;
  }
}
