// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file recently_added.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Song_MetadataTag } from "./song_pb.js";

/**
 * @generated from message RecentlyAddedFilter
 */
export class RecentlyAddedFilter extends Message<RecentlyAddedFilter> {
  /**
   * @generated from field: Song.MetadataTag tag = 1;
   */
  tag = Song_MetadataTag.UNKNOWN;

  constructor(data?: PartialMessage<RecentlyAddedFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "RecentlyAddedFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tag", kind: "enum", T: proto3.getEnumType(Song_MetadataTag) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecentlyAddedFilter {
    return new RecentlyAddedFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecentlyAddedFilter {
    return new RecentlyAddedFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecentlyAddedFilter {
    return new RecentlyAddedFilter().fromJsonString(jsonString, options);
  }

  static equals(a: RecentlyAddedFilter | PlainMessage<RecentlyAddedFilter> | undefined, b: RecentlyAddedFilter | PlainMessage<RecentlyAddedFilter> | undefined): boolean {
    return proto3.util.equals(RecentlyAddedFilter, a, b);
  }
}

/**
 * @generated from message RecentlyAddedState
 */
export class RecentlyAddedState extends Message<RecentlyAddedState> {
  /**
   * @generated from field: repeated RecentlyAddedFilter filters = 1;
   */
  filters: RecentlyAddedFilter[] = [];

  constructor(data?: PartialMessage<RecentlyAddedState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "RecentlyAddedState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filters", kind: "message", T: RecentlyAddedFilter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecentlyAddedState {
    return new RecentlyAddedState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecentlyAddedState {
    return new RecentlyAddedState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecentlyAddedState {
    return new RecentlyAddedState().fromJsonString(jsonString, options);
  }

  static equals(a: RecentlyAddedState | PlainMessage<RecentlyAddedState> | undefined, b: RecentlyAddedState | PlainMessage<RecentlyAddedState> | undefined): boolean {
    return proto3.util.equals(RecentlyAddedState, a, b);
  }
}

