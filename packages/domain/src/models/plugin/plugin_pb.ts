// @generated by protoc-gen-es v2.6.3 with parameter "target=ts,import_extension=js"
// @generated from file plugin/plugin.proto (package sola, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Song } from "../song_pb.js";
import { file_song } from "../song_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file plugin/plugin.proto.
 */
export const file_plugin_plugin: GenFile = /*@__PURE__*/
  fileDesc("ChNwbHVnaW4vcGx1Z2luLnByb3RvEgRzb2xhIvwCCgZQbHVnaW4SDAoEaG9zdBgBIAEoCRIMCgRwb3J0GAIgASgFEh4KBGluZm8YAyABKAsyEC5zb2xhLlBsdWdpbkluZm8SPQoRcGx1Z2luX3BhcmFtZXRlcnMYBCADKAsyIi5zb2xhLlBsdWdpbi5QbHVnaW5QYXJhbWV0ZXJzRW50cnkSFAoMaXNfYXZhaWxhYmxlGAUgASgIGjcKFVBsdWdpblBhcmFtZXRlcnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIqcBCgpQbHVnaW5UeXBlEgsKB1VOS05PV04QABIPCgtPTl9QTEFZTElTVBABEhMKD09OX1NBVkVEX1NFQVJDSBACEhEKDU9OX1BMQVlfUVVFVUUQAxITCg9PTl9GSUxFX0VYUExPUkUQBBIOCgpPTl9CUk9XU0VSEAUSFwoTT05fRlVMTF9URVhUX1NFQVJDSBAGEhUKEU9OX1JFQ0VOVExZX0FEREVEEAci+QEKClBsdWdpbkluZm8SDAoEbmFtZRgBIAEoCRIPCgd2ZXJzaW9uGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEhoKEmNvbnRleHRfbWVudV90aXRsZRgEIAEoCRIgChhjb250ZXh0X21lbnVfZGVzY3JpcHRpb24YBSABKAkSMAoPc3VwcG9ydGVkX3R5cGVzGAYgAygOMhcuc29sYS5QbHVnaW4uUGx1Z2luVHlwZRIiChpyZXF1aXJlZF9wbHVnaW5fcGFyYW1ldGVycxgHIAMoCRIjChtyZXF1aXJlZF9yZXF1ZXN0X3BhcmFtZXRlcnMYCCADKAkiLAoLUGx1Z2luU3RhdGUSHQoHcGx1Z2lucxgBIAMoCzIMLnNvbGEuUGx1Z2luIjMKFVBsdWdpblJlZ2lzdGVyUmVxdWVzdBIMCgRob3N0GAEgASgJEgwKBHBvcnQYAiABKAUiOAoWUGx1Z2luUmVnaXN0ZXJSZXNwb25zZRIeCgRpbmZvGAEgASgLMhAuc29sYS5QbHVnaW5JbmZvItcCChRQbHVnaW5FeGVjdXRlUmVxdWVzdBIMCgRob3N0GAEgASgJEgwKBHBvcnQYAiABKAUSSwoRcGx1Z2luX3BhcmFtZXRlcnMYAyADKAsyMC5zb2xhLlBsdWdpbkV4ZWN1dGVSZXF1ZXN0LlBsdWdpblBhcmFtZXRlcnNFbnRyeRJNChJyZXF1ZXN0X3BhcmFtZXRlcnMYBCADKAsyMS5zb2xhLlBsdWdpbkV4ZWN1dGVSZXF1ZXN0LlJlcXVlc3RQYXJhbWV0ZXJzRW50cnkSFAoFc29uZ3MYBSADKAsyBS5Tb25nGjcKFVBsdWdpblBhcmFtZXRlcnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGjgKFlJlcXVlc3RQYXJhbWV0ZXJzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKiAQoVUGx1Z2luRXhlY3V0ZVJlc3BvbnNlEg8KB21lc3NhZ2UYASABKAkSGwoTcHJvZ3Jlc3NfcGVyY2VudGFnZRgCIAEoBRIyCgZzdGF0dXMYAyABKA4yIi5zb2xhLlBsdWdpbkV4ZWN1dGVSZXNwb25zZS5TdGF0dXMiJwoGU3RhdHVzEgsKB1VOS05PV04QABIGCgJPSxABEggKBFdBUk4QAmIGcHJvdG8z", [file_song]);

/**
 * @generated from message sola.Plugin
 */
export type Plugin = Message<"sola.Plugin"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: int32 port = 2;
   */
  port: number;

  /**
   * @generated from field: sola.PluginInfo info = 3;
   */
  info?: PluginInfo;

  /**
   * @generated from field: map<string, string> plugin_parameters = 4;
   */
  pluginParameters: { [key: string]: string };

  /**
   * @generated from field: bool is_available = 5;
   */
  isAvailable: boolean;
};

/**
 * Describes the message sola.Plugin.
 * Use `create(PluginSchema)` to create a new message.
 */
export const PluginSchema: GenMessage<Plugin> = /*@__PURE__*/
  messageDesc(file_plugin_plugin, 0);

/**
 * @generated from enum sola.Plugin.PluginType
 */
export enum Plugin_PluginType {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: ON_PLAYLIST = 1;
   */
  ON_PLAYLIST = 1,

  /**
   * @generated from enum value: ON_SAVED_SEARCH = 2;
   */
  ON_SAVED_SEARCH = 2,

  /**
   * @generated from enum value: ON_PLAY_QUEUE = 3;
   */
  ON_PLAY_QUEUE = 3,

  /**
   * @generated from enum value: ON_FILE_EXPLORE = 4;
   */
  ON_FILE_EXPLORE = 4,

  /**
   * @generated from enum value: ON_BROWSER = 5;
   */
  ON_BROWSER = 5,

  /**
   * @generated from enum value: ON_FULL_TEXT_SEARCH = 6;
   */
  ON_FULL_TEXT_SEARCH = 6,

  /**
   * @generated from enum value: ON_RECENTLY_ADDED = 7;
   */
  ON_RECENTLY_ADDED = 7,
}

/**
 * Describes the enum sola.Plugin.PluginType.
 */
export const Plugin_PluginTypeSchema: GenEnum<Plugin_PluginType> = /*@__PURE__*/
  enumDesc(file_plugin_plugin, 0, 0);

/**
 * @generated from message sola.PluginInfo
 */
export type PluginInfo = Message<"sola.PluginInfo"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string context_menu_title = 4;
   */
  contextMenuTitle: string;

  /**
   * @generated from field: string context_menu_description = 5;
   */
  contextMenuDescription: string;

  /**
   * @generated from field: repeated sola.Plugin.PluginType supported_types = 6;
   */
  supportedTypes: Plugin_PluginType[];

  /**
   * @generated from field: repeated string required_plugin_parameters = 7;
   */
  requiredPluginParameters: string[];

  /**
   * @generated from field: repeated string required_request_parameters = 8;
   */
  requiredRequestParameters: string[];
};

/**
 * Describes the message sola.PluginInfo.
 * Use `create(PluginInfoSchema)` to create a new message.
 */
export const PluginInfoSchema: GenMessage<PluginInfo> = /*@__PURE__*/
  messageDesc(file_plugin_plugin, 1);

/**
 * @generated from message sola.PluginState
 */
export type PluginState = Message<"sola.PluginState"> & {
  /**
   * @generated from field: repeated sola.Plugin plugins = 1;
   */
  plugins: Plugin[];
};

/**
 * Describes the message sola.PluginState.
 * Use `create(PluginStateSchema)` to create a new message.
 */
export const PluginStateSchema: GenMessage<PluginState> = /*@__PURE__*/
  messageDesc(file_plugin_plugin, 2);

/**
 * @generated from message sola.PluginRegisterRequest
 */
export type PluginRegisterRequest = Message<"sola.PluginRegisterRequest"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: int32 port = 2;
   */
  port: number;
};

/**
 * Describes the message sola.PluginRegisterRequest.
 * Use `create(PluginRegisterRequestSchema)` to create a new message.
 */
export const PluginRegisterRequestSchema: GenMessage<PluginRegisterRequest> = /*@__PURE__*/
  messageDesc(file_plugin_plugin, 3);

/**
 * @generated from message sola.PluginRegisterResponse
 */
export type PluginRegisterResponse = Message<"sola.PluginRegisterResponse"> & {
  /**
   * @generated from field: sola.PluginInfo info = 1;
   */
  info?: PluginInfo;
};

/**
 * Describes the message sola.PluginRegisterResponse.
 * Use `create(PluginRegisterResponseSchema)` to create a new message.
 */
export const PluginRegisterResponseSchema: GenMessage<PluginRegisterResponse> = /*@__PURE__*/
  messageDesc(file_plugin_plugin, 4);

/**
 * @generated from message sola.PluginExecuteRequest
 */
export type PluginExecuteRequest = Message<"sola.PluginExecuteRequest"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: int32 port = 2;
   */
  port: number;

  /**
   * @generated from field: map<string, string> plugin_parameters = 3;
   */
  pluginParameters: { [key: string]: string };

  /**
   * @generated from field: map<string, string> request_parameters = 4;
   */
  requestParameters: { [key: string]: string };

  /**
   * @generated from field: repeated Song songs = 5;
   */
  songs: Song[];
};

/**
 * Describes the message sola.PluginExecuteRequest.
 * Use `create(PluginExecuteRequestSchema)` to create a new message.
 */
export const PluginExecuteRequestSchema: GenMessage<PluginExecuteRequest> = /*@__PURE__*/
  messageDesc(file_plugin_plugin, 5);

/**
 * @generated from message sola.PluginExecuteResponse
 */
export type PluginExecuteResponse = Message<"sola.PluginExecuteResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: int32 progress_percentage = 2;
   */
  progressPercentage: number;

  /**
   * @generated from field: sola.PluginExecuteResponse.Status status = 3;
   */
  status: PluginExecuteResponse_Status;
};

/**
 * Describes the message sola.PluginExecuteResponse.
 * Use `create(PluginExecuteResponseSchema)` to create a new message.
 */
export const PluginExecuteResponseSchema: GenMessage<PluginExecuteResponse> = /*@__PURE__*/
  messageDesc(file_plugin_plugin, 6);

/**
 * @generated from enum sola.PluginExecuteResponse.Status
 */
export enum PluginExecuteResponse_Status {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: OK = 1;
   */
  OK = 1,

  /**
   * Throw an error for ERROR
   *
   * @generated from enum value: WARN = 2;
   */
  WARN = 2,
}

/**
 * Describes the enum sola.PluginExecuteResponse.Status.
 */
export const PluginExecuteResponse_StatusSchema: GenEnum<PluginExecuteResponse_Status> = /*@__PURE__*/
  enumDesc(file_plugin_plugin, 6, 0);

